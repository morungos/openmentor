# -------------------------------------------------------------------
#
#  M A V E N    S E T T I N G S
#
# -------------------------------------------------------------------
maven.repo.remote=http://mirrors.ibiblio.org/pub/mirrors/maven,http://www.ibiblio.org/maven,http://www.codeczar.com/maven,http://193.63.235.8/maven

#maven.test.skip=true
#maven.test.failure.ignore=true

#
# Tell maven how the project is arranged
#
# We need java 5 from revision 495 (SerialBlob in FileUploadController)
maven.compile.source=1.5

# The next one defaults to ${maven.src.dir}/webapp
maven.war.src=${maven.src.dir}/main/webapp
maven.war.final.name=development.war

# -------------------------------------------------------------------
#
#  T O M C A T   S E T T I N G S
#
# -------------------------------------------------------------------
# This describes a user in Tomcat's "tomcat-users.xml" file who has a
# "manager" role.  It should not be left without a password.
maven.tomcat.username=ant
maven.tomcat.password=Aonpte6n1
maven.tomcat.port=8080
# I've had to remove precompilation for the time being.
maven.tomcat.precompile=false
# Used by newer versions of the Maven tomcat plugin
maven.tomcat.jsp.precompile=false
# See the maven tomcat plugin (on Codeczar) for the advice to add the
# one below.  
# maven.war.src.excludes=**/*.jsp
maven.tomcat.war.context=/development
maven.tomcat.deploy.mode=development
maven.tomcat.manager.url=http://localhost:8080/manager

# -------------------------------------------------------------------
#
#  R E P O R T   S E T T I N G S
#
# -------------------------------------------------------------------

# The object model is generated in "turbine" checkstyle mode.  Ignore
# the ones that are automatically regenerated.  Also ignore, for the
# time being, all classes from OpenMentor 1.

maven.checkstyle.excludes = openmentor/**/*.java,**/openmentor/extraction/*.java

maven.changelog.factory=org.apache.maven.svnlib.SvnChangeLogFactory

# One to know about if javadoc goes pear shaped
# maven.javadoc.debug=true


# -------------------------------------------------------------------
#
#  J A V A D O C   S E T T I N G S
#
# -------------------------------------------------------------------

# Stop errors for Javadoc on the @todo tags

maven.javadoc.additionalparam=-tag todo:a:"To Do:"


# -------------------------------------------------------------------
#
#  HI B E R N A T E   S E T T I N G S
#
# -------------------------------------------------------------------

maven.hibernate.codeGeneration.input.dir=${maven.src.dir}/main/java
maven.hibernate.codeGeneration.output.dir=${maven.src.dir}/main/java
maven.hibernate.properties=${maven.src.dir}/conf/hibernate.properties


# -------------------------------------------------------------------
#
#  J U N I T   S E T T I N G S
#
# -------------------------------------------------------------------

# On MacOS - setting AWT to headless causes "no autorelease pool
# exists" errors However, on Linux it is required to pass the unit
# tests And on Windows, it doesn't seem to matter a whole lot, but
# then Windows is rarely headless

maven.junit.jvmargs=-Djava.awt.headless=true

# The next one makes testing *much* slower.  It is necessary until I
# find how to stop maven keeping the database connection open, leaving
# a lock file which causes subsequent tests to fail.  One clue may be
# at http://www.hibernate.org/123.html, but that uses avalon rather
# than sping.

maven.junit.fork=true


# -------------------------------------------------------------------
#
#  T O R Q U E   S E T T I N G S
#
# -------------------------------------------------------------------

torque.project = hibernate_openmentor
torque.database = mysql
torque.contextProperties = project.properties

torque.sql.dir = target/sql
torque.doc.dir = target/sql
torque.schema.dir = src/etc/schema

torque.database.createUrl = jdbc:mysql://localhost:3306/mysql
torque.database.buildUrl = jdbc:mysql://localhost:3306/hibernate_openmentor
# The next one is the same value as above
torque.database.url = jdbc:mysql://localhost:3306/hibernate_openmentor
torque.database.driver = com.mysql.jdbc.Driver
# The next user is the administrative user, who can create tables etc.
torque.database.user = torque
torque.database.password = SM1acvre2nt
torque.database.host = localhost

# -------------------------------------------------------------------
#
#  D E P L O Y   S E T T I N G S
#
# -------------------------------------------------------------------

maven.site.deploy.method=fs


