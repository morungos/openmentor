<?xml version="1.0" encoding="UTF-8"?>
<project>
    <pomVersion>3</pomVersion>
    <artifactId>openmentor</artifactId>
    <name>OpenMentor</name>
    <groupId>openmentor</groupId>
    <id>openmentor:openmentor</id>
    <currentVersion>1.0-dev</currentVersion>
    <organization>
        <name>The OpenMentor Team</name>
        <url>http://www.openmentor.org.uk</url>
    </organization>
    <inceptionYear>2004</inceptionYear>
    <package>*</package>
    <logo>http://openmentor.comp.rgu.ac.uk/images/omlogo.jpg</logo>
    <siteDirectory>/usr/local/web</siteDirectory>
    <description>This demonstrator is designed to show the range of
  tools and recommendations available to a modern Java (web)
  applications.  It aim to show how the tools should be used and the
  setup need to make them interact simply.  In particular, this demo
  builds using either ant or maven.</description>
    <shortDescription>Open source mentoring of tutors</shortDescription>
    <url>http://openmentor.comp.rgu.ac.uk/development</url>
    <issueTrackingUrl>http://openmentor.comp.rgu.ac.uk/scarab/issues/</issueTrackingUrl>
    <repository>
        <connection>scm:svn:http://stuart@openmentor.comp.rgu.ac.uk/svn/openmentor/trunk</connection>
    </repository>
    <versions>
        <version>
            <id>0.95</id>
            <name>Initial</name>
            <tag>INITIAL</tag>
        </version>
    </versions>
    <developers>
        <developer>
            <name>Denise Whitelock</name>
            <id>denise</id>
            <email>D.M.Whitelock@open.ac.uk</email>
            <organization>Institute of Educational Technology, The Open University</organization>
            <timezone>0</timezone>
        </developer>
        <developer>
            <name>Stuart Watt</name>
            <id>stuart</id>
            <email>S.N.K.Watt@rgu.ac.uk</email>
            <organization>School of Computing, The Robert Gordon University, Aberdeen</organization>
            <url>http://www.comp.rgu.ac.uk/staff/sw</url>
            <timezone>0</timezone>
        </developer>
        <developer>
            <name>Jan Rae</name>
            <id>jan</id>
            <email>J.L.Rae@open.ac.uk</email>
            <organization>Institute of Educational Technology, The Open University</organization>
            <timezone>0</timezone>
        </developer>
        <developer>
            <name>Ian Craw</name>
            <id>ian</id>
            <email>Ian.Craw@openability.co.uk</email>
            <organization>Openability Consulting</organization>
            <url>www.openability.co.uk</url>
            <timezone>0</timezone>
        </developer>
        <developer>
            <name>Colin Beagrie</name>
            <id>colin</id>
            <email>cb@comp.rgu.ac.uk</email>
            <organization>School of Computing, The Robert Gordon University</organization>
            <timezone>0</timezone>
        </developer>
        <developer>
            <name>Will Woods</name>
            <id>will</id>
            <email>W.I.S.Woods@open.ac.uk</email>
            <organization>Institute of Educational Technology, The Open University</organization>
            <timezone>0</timezone>
        </developer>
        <developer>
            <name>Maggie Nicol</name>
            <id>maggie</id>
            <email>mn@comp.rgu.ac.uk</email>
            <organization>School of Computing, The Robert Gordon University</organization>
            <timezone>0</timezone>
        </developer>
        <developer>
            <name>Hassan Sheikh</name>
            <id>hassan</id>
            <email>M.U.H.Sheikh@open.ac.uk</email>
            <organization>Institute of Educational Technology, The Open University</organization>
            <timezone>0</timezone>
        </developer>
    </developers>
    <!-- Any jar without a <url> element is available from
       http://www.ibiblio.org/maven and will be found and retrieved
       automatically by maven. -->
    <dependencies>
      <!-- Used to do authentication. -->
      <dependency>
        <groupId>acegisecurity</groupId>
        <artifactId>acegi-security</artifactId>
        <version>0.9.0</version>
        <properties>
          <war.bundle>true</war.bundle>
        </properties>
      </dependency>
      <!-- Came with the move to hibenate3; runtime only -->
      <dependency>
        <groupId>hibernate</groupId>
        <artifactId>antlr</artifactId>
        <version>2.7.5H3</version>
        <properties>
          <war.bundle>true</war.bundle>
        </properties>
      </dependency>

    	<!-- Used to read Word files -->
        <dependency>
            <groupId>poi</groupId>
            <artifactId>poi</artifactId>
            <version>2.5.1-final-20040804</version>
            <properties>
                <war.bundle>true</war.bundle>
            </properties>
        </dependency>
        
        <!-- Open office does not use versioned jars; the version numbers
         here imply that the jar was released with that verison of
         Open Office. -->
        <!-- OpenOffice no longer used
        <dependency>
            <groupId>openoffice</groupId>
            <artifactId>juh</artifactId>
            <version>1.1.4</version>
            <url>http://download.openoffice.org/index.html</url>
        </dependency>
        <dependency>
            <groupId>openoffice</groupId>
            <artifactId>jurt</artifactId>
            <version>1.1.4</version>
            <url>http://download.openoffice.org/index.html</url>
        </dependency>
        <dependency>
            <groupId>openoffice</groupId>
            <artifactId>unoil</artifactId>
            <version>1.1.4</version>
            <url>http://download.openoffice.org/index.html</url>
        </dependency>
        <dependency>
            <groupId>openoffice</groupId>
            <artifactId>ridl</artifactId>
            <version>1.1.4</version>
            <url>http://download.openoffice.org/index.html</url>
        </dependency>
        -->
        <dependency>
            <groupId>opensymphony</groupId>
            <artifactId>sitemesh</artifactId>
            <version>2.2.1</version>
            <properties>
                <war.bundle>true</war.bundle>
            </properties>
        </dependency>
        <!-- This is just included to support precompilation-->
        <dependency>
            <groupId>servletapi</groupId>
            <artifactId>servlet-api</artifactId>
            <version>2.4-20040521</version>
        </dependency>
        <!-- This is just included to support precompilation-->
        <dependency>
            <groupId>jstl</groupId>
            <artifactId>jstl</artifactId>
            <version>1.1.2</version>
            <properties>
                <war.bundle>true</war.bundle>
            </properties>
        </dependency>
        <!-- Used by taglibs.jsp -->
        <dependency>
            <groupId>taglibs</groupId>
            <artifactId>standard</artifactId>
            <version>1.0.5</version>
            <properties>
                <war.bundle>true</war.bundle>
            </properties>
        </dependency>
        <dependency>
            <id>commons-beanutils</id>
            <version>1.7.0</version>
            <url>http://jakarta.apache.org/commons/</url>
            <properties>
                <war.bundle>true</war.bundle>
            </properties>
        </dependency>
        <!-- Codec is a dependency of acegi-security -->
        <dependency>
            <id>commons-codec</id>
            <version>1.3</version>
            <url>http://jakarta.apache.org/commons/codec/</url>
            <properties>
                <war.bundle>true</war.bundle>
            </properties>
        </dependency>

        <dependency>
            <id>commons-collections</id>
            <version>3.0</version>
            <properties>
                <war.bundle>true</war.bundle>
            </properties>
        </dependency>
        <!-- Used to read the Torque.properties file. -->
        <dependency>
            <groupId>commons-configuration</groupId>
            <artifactId>commons-configuration</artifactId>
            <version>1.1</version>
            <properties>
                <war.bundle>true</war.bundle>
            </properties>
        </dependency>
        <!-- Needed by Torque runtime.
        <dependency>
            <id>commons-dbcp</id>
            <version>1.1</version>
            <url>http://jakarta.apache.org/commons/</url>
            <properties>
                <war.bundle>true</war.bundle>
            </properties>
        </dependency> -->
        <!-- Used by spring beans. -->
        <dependency>
            <id>commons-digester</id>
            <version>1.6</version>
            <properties>
                <war.bundle>true</war.bundle>
            </properties>
        </dependency>
        <dependency>
            <groupId>commons-fileupload</groupId>
            <artifactId>commons-fileupload</artifactId>
            <version>1.0</version>
            <properties>
                <war.bundle>true</war.bundle>
            </properties>
        </dependency>
        <!-- Needed to compile the object model. -->
        <dependency>
            <id>commons-lang</id>
            <version>2.0</version>
            <url>http://jakarta.apache.org/commons/</url>
            <properties>
                <war.bundle>true</war.bundle>
            </properties>
        </dependency>
        <!-- Just used to indirect to log4j logging.  -->
        <dependency>
            <groupId>commons-logging</groupId>
            <artifactId>commons-logging</artifactId>
            <version>1.0.4</version>
            <properties>
                <war.bundle>true</war.bundle>
            </properties>
        </dependency>
        <!-- Validating web page inputs. -->
        <dependency>
            <groupId>commons-validator</groupId>
            <artifactId>commons-validator</artifactId>
            <version>1.1.4</version>
            <properties>
                <war.bundle>true</war.bundle>
            </properties>
        </dependency>
        <!-- This is used by hibernate / spring at least for testing. -->
        <dependency>
            <groupId>odmg</groupId>
            <artifactId>odmg</artifactId>
            <version>3.0</version>
            <properties>
                <war.bundle>true</war.bundle>
            </properties>
        </dependency>
        <!-- This is used by hibernate / spring at least for testing. -->
        <dependency>
            <groupId>dom4j</groupId>
            <artifactId>dom4j</artifactId>
            <version>1.6.1</version>
            <properties>
                <war.bundle>true</war.bundle>
            </properties>
        </dependency>
        <!-- This is used by hibernate / spring at least for testing. -->
        <dependency>
            <groupId>cglib</groupId>
            <artifactId>cglib-full</artifactId>
            <version>2.0.2</version>
            <properties>
                <war.bundle>true</war.bundle>
            </properties>
        </dependency>
        <!-- This is used by hibernate / spring at least for testing. -->
        <dependency>
            <groupId>ehcache</groupId>
            <artifactId>ehcache</artifactId>
            <version>1.1</version>
            <properties>
                <war.bundle>true</war.bundle>
            </properties>
        </dependency>
        <!-- Only jcharts-0.6.0 is on ibiblio - and it causes failures. -->
        <dependency>
            <groupId>jCharts</groupId>
            <artifactId>jCharts</artifactId>
            <version>0.7.5</version>
            <properties>
                <war.bundle>true</war.bundle>
            </properties>
            <url>http://prdownloads.sourceforge.net/jcharts/jCharts-0.7.5.zip?download</url>
        </dependency>
        <!-- Add to the war bundle in case it is a virgin Tomcat. -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>3.8.1</version>
        </dependency>
        <dependency>
            <groupId>hibernate</groupId>
            <artifactId>hibernate</artifactId>
            <version>3.0.5</version>
            <properties>
                <war.bundle>true</war.bundle>
            </properties>
        </dependency>
         <dependency>
            <groupId>springframework</groupId>
            <artifactId>spring</artifactId>
            <version>1.2.5</version>
            <properties>
                <war.bundle>true</war.bundle>
            </properties>
        </dependency>
        <!-- This was in spring-sandbox -->
        <dependency>
          <groupId>springmodules</groupId>
          <artifactId>springmodules-validator</artifactId>
          <version>0.1</version>
          <scope>runtime</scope>
          <properties>
            <war.bundle>true</war.bundle>
          </properties>
        </dependency>
        <!-- Again used in unit tests. -->
         <dependency>
            <groupId>springframework</groupId>
            <artifactId>spring-mock</artifactId>
            <version>1.2.5</version>
        </dependency>
        <!-- This is the usual sun problem; you have to agree before
             starting the download.  For some reason it is packaged as
             a zip, but unzipping and then jarring gives identical
             content, and is what is wanted.  as expected, it is used
             by hibernate to manage transactions.-->
        <dependency>
            <id>jta</id>
            <version>1.0.1B</version>
            <url>http://java.sun.com/jta/index.html</url>
            <properties>
                <war.bundle>true</war.bundle>
            </properties>
        </dependency>
        <dependency>
          <groupId>jwebunit</groupId>
          <artifactId>jwebunit</artifactId>
          <version>1.2</version>
          <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
            <version>1.2.8</version>
            <properties>
                <war.bundle>true</war.bundle>
            </properties>
        </dependency>
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>3.1.11</version>
            <properties>
                <war.bundle>true</war.bundle>
            </properties>
        </dependency>
        <!-- Pattern matching used in acegi-security -->
        <dependency>
          <id>oro</id>
          <version>2.0.8</version>
            <properties>
                <war.bundle>true</war.bundle>
            </properties>
        </dependency>
    </dependencies>
    <build>
      <sourceDirectory>src/main/java</sourceDirectory>
      <unitTestSourceDirectory>src/test/java</unitTestSourceDirectory>
      <!-- Unit test cases -->
      <unitTest>
        <includes>
          <include>**/*Test.java</include>
        </includes>
        <resources>
          <resource>
            <directory>${maven.war.src}</directory>
            <includes>
              <include>WEB-INF/applicationContext.xml</include>
              <include>WEB-INF/action-servlet.xml</include>
              <include>WEB-INF/validation.xml</include>
              <include>WEB-INF/validator-rules.xml</include>
            </includes>
            <filtering>false</filtering>
          </resource>
          <resource>
            <!-- Hibernate mapping files -->
          <directory>src/main/java</directory>
            <includes>
              <include>**/*.xml</include>
            </includes>
          </resource>
        </resources>
      </unitTest>
      <!-- J A R  R E S O U R C E S -->
      <!-- Resources that are packaged up inside the JAR file -->
      <resources>
        <resource>
          <directory>${basedir}/src/conf</directory>
          <includes>
            <include>*.properties</include>
          </includes>
          <filtering>false</filtering>
        </resource>
        <resource>
          <!-- Hibernate mapping files -->
          <directory>src/main/java</directory>
          <includes>
            <include>**/*.xml</include>
          </includes>
        </resource>
        <resource>
          <!-- Other resources -->
          <directory>src/main/resources</directory>
          <includes>
            <include>**/*</include>
          </includes>
        </resource>
      </resources>
    </build>
    <reports>
        <!--
     |
     | These should all be completely self contained. You should be able
     | to generate each of them individually without needing the final
     | xdoc transformation.
     |
     | Each report plugin with it's POM and plugin.jelly logic should
     | contain everything needed to produced the report.
     |
    -->
        <report>maven-jdepend-plugin</report>
        <report>maven-changes-plugin</report>
        <report>maven-checkstyle-plugin</report>
        <report>maven-changelog-plugin</report>
        <report>maven-faq-plugin</report>
        <report>maven-file-activity-plugin</report>
        <report>maven-developer-activity-plugin</report>
        <!-- <report>maven-clover-plugin</report> -->
        <report>maven-simian-plugin</report>
        <report>maven-javadoc-plugin</report>
        <report>maven-jxr-plugin</report>
        <report>maven-junit-report-plugin</report>
        <report>maven-tasklist-plugin</report>
    </reports>
</project>
