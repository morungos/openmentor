/* =======================================================================
 * Copyright 2004-2006 The OpenMentor Team.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * ========================================================================
 */

/**
 * @author OpenMentor team
 */

package uk.org.openmentor.report.constituents;

import java.io.OutputStream;

import uk.org.openmentor.businesslogic.BusinessLogicException;
import uk.org.openmentor.report.exceptions.ImageTypeNotSupportedException;


/**
 * Provides a basic interface for chart constituents that defines the core
 * functionality required for all chart types.
 */

public interface ChartConstituent extends ReportConstituent {
    /**
     * Constant to represent the mime type of JPEG images
     */

    public static final String JPEG_MIME_TYPE = "image/jpeg";

    /**
     * Constant to represent the mime type of PNG images
     */

    public static final String PNG_MIME_TYPE = "image/png";

    /**
     * Writes an image of the chart to an output stream in the format indicated.
     * Classes implementing this interface should indicate in their
     * documentation which image types they support
     * 
     * @param out
     *            The output stream to write the image to
     * @param mime_type
     *            The mime type of the desired output format
     * @throws ImageTypeNotSupportedException
     *             to indicate that the requested image type is not supported by
     *             the particular implementation
     * @throws BusinessLogicException
     *             to act as a general wrapper for any exceptions generated by a
     *             charting library while writing the chart image
     */

    public void writeChartToStream(OutputStream out, String mime_type)
            throws ImageTypeNotSupportedException, BusinessLogicException;
}
